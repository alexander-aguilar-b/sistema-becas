//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PruebaMvc
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PortalBecasEntities : DbContext
    {
        public PortalBecasEntities()
            : base("name=PortalBecasEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Formulario> Formulario { get; set; }
        public virtual DbSet<FormularioTemporal> FormularioTemporal { get; set; }
        public virtual DbSet<RespuestaTemporal> RespuestaTemporal { get; set; }
        public virtual DbSet<Oferta> Oferta { get; set; }
        public virtual DbSet<Postulacion> Postulacion { get; set; }
        public virtual DbSet<Postulacion1> Postulacion1Set { get; set; }
    
        public virtual int spCrearFormularioProceso(string cedula)
        {
            var cedulaParameter = cedula != null ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCrearFormularioProceso", cedulaParameter);
        }
    
        public virtual int spEliminarItemFormularioTemporal(Nullable<int> idItem)
        {
            var idItemParameter = idItem.HasValue ?
                new ObjectParameter("IdItem", idItem) :
                new ObjectParameter("IdItem", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminarItemFormularioTemporal", idItemParameter);
        }
    
        public virtual int spInsertarItemFormularioTemporal(string cedulaUsuario, string item, Nullable<int> idTipoControl, string respuestas)
        {
            var cedulaUsuarioParameter = cedulaUsuario != null ?
                new ObjectParameter("CedulaUsuario", cedulaUsuario) :
                new ObjectParameter("CedulaUsuario", typeof(string));
    
            var itemParameter = item != null ?
                new ObjectParameter("Item", item) :
                new ObjectParameter("Item", typeof(string));
    
            var idTipoControlParameter = idTipoControl.HasValue ?
                new ObjectParameter("IdTipoControl", idTipoControl) :
                new ObjectParameter("IdTipoControl", typeof(int));
    
            var respuestasParameter = respuestas != null ?
                new ObjectParameter("Respuestas", respuestas) :
                new ObjectParameter("Respuestas", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertarItemFormularioTemporal", cedulaUsuarioParameter, itemParameter, idTipoControlParameter, respuestasParameter);
        }
    
        public virtual ObjectResult<spObtenerFormularioTemporal_Result> spObtenerFormularioTemporal(string cedula)
        {
            var cedulaParameter = cedula != null ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spObtenerFormularioTemporal_Result>("spObtenerFormularioTemporal", cedulaParameter);
        }
    
        public virtual ObjectResult<spObtenerRespuestaItem_Result> spObtenerRespuestaItem(Nullable<int> idItem)
        {
            var idItemParameter = idItem.HasValue ?
                new ObjectParameter("IdItem", idItem) :
                new ObjectParameter("IdItem", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spObtenerRespuestaItem_Result>("spObtenerRespuestaItem", idItemParameter);
        }
    
        public virtual ObjectResult<spObtenerTipoControl_Result> spObtenerTipoControl()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spObtenerTipoControl_Result>("spObtenerTipoControl");
        }
    
        public virtual int spCalificarItems(string cedula, Nullable<int> idItem, string valor)
        {
            var cedulaParameter = cedula != null ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(string));
    
            var idItemParameter = idItem.HasValue ?
                new ObjectParameter("IdItem", idItem) :
                new ObjectParameter("IdItem", typeof(int));
    
            var valorParameter = valor != null ?
                new ObjectParameter("Valor", valor) :
                new ObjectParameter("Valor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCalificarItems", cedulaParameter, idItemParameter, valorParameter);
        }
    
        public virtual ObjectResult<spConsultarFormulario_Result> spConsultarFormulario(string cedula)
        {
            var cedulaParameter = cedula != null ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultarFormulario_Result>("spConsultarFormulario", cedulaParameter);
        }
    
        public virtual int spCrearFormularioSolicitante(string cedula)
        {
            var cedulaParameter = cedula != null ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCrearFormularioSolicitante", cedulaParameter);
        }
    
        public virtual int spEliminarFormulario(string cedula)
        {
            var cedulaParameter = cedula != null ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminarFormulario", cedulaParameter);
        }
    
        public virtual ObjectResult<spConsultarUsuario_Result> spConsultarUsuario(string nombreUsuario, string clave)
        {
            var nombreUsuarioParameter = nombreUsuario != null ?
                new ObjectParameter("NombreUsuario", nombreUsuario) :
                new ObjectParameter("NombreUsuario", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultarUsuario_Result>("spConsultarUsuario", nombreUsuarioParameter, claveParameter);
        }
    
        public virtual int spAplicarOferta(Nullable<int> idOferta, Nullable<int> idSolicitante)
        {
            var idOfertaParameter = idOferta.HasValue ?
                new ObjectParameter("IdOferta", idOferta) :
                new ObjectParameter("IdOferta", typeof(int));
    
            var idSolicitanteParameter = idSolicitante.HasValue ?
                new ObjectParameter("IdSolicitante", idSolicitante) :
                new ObjectParameter("IdSolicitante", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAplicarOferta", idOfertaParameter, idSolicitanteParameter);
        }
    
        public virtual ObjectResult<spConsultarOferta_Result> spConsultarOferta(Nullable<int> idOferta)
        {
            var idOfertaParameter = idOferta.HasValue ?
                new ObjectParameter("IdOferta", idOferta) :
                new ObjectParameter("IdOferta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultarOferta_Result>("spConsultarOferta", idOfertaParameter);
        }
    
        public virtual ObjectResult<spConsultarOfertaOferente_Result> spConsultarOfertaOferente(Nullable<int> idOferente)
        {
            var idOferenteParameter = idOferente.HasValue ?
                new ObjectParameter("IdOferente", idOferente) :
                new ObjectParameter("IdOferente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultarOfertaOferente_Result>("spConsultarOfertaOferente", idOferenteParameter);
        }
    }
}
